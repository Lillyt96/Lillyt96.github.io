{"ast":null,"code":"const findTopValue = (obj, topN) => {\n  let topObj = {};\n  var keys = Object.keys(obj);\n  keys.sort((a, b) => {\n    return obj[a] - obj[b];\n  });\n  keys.slice(-topN).reverse().forEach(k => {\n    topObj[k] = obj[k];\n  });\n  let topArr = [];\n\n  for (var key in topObj) {\n    topArr.push(`${key} (${topObj[key]} games)`);\n  }\n\n  return topArr;\n};\n\nconst RetrieveData = async (enteredSummonerName, enteredRegion) => {\n  const riotAPIKey = \"RGAPI-8a62b8a3-4e69-40eb-b56d-786ccda80987\";\n  const numbOfGames = 2; //Get summoner ID\n\n  const summonerIdResponse = await fetch(`https://${enteredRegion}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${enteredSummonerName}?api_key=${riotAPIKey}`, {\n    accept: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  let summonerId = (await summonerIdResponse.json())[\"id\"]; //Get clash team ID\n\n  const teamIdResponse = await fetch(`https://${enteredRegion}.api.riotgames.com/lol/clash/v1/players/by-summoner/${summonerId}?api_key=${riotAPIKey}`, {\n    accept: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  let teamId = (await teamIdResponse.json())[0][\"teamId\"]; //Get clash team plays summoner ID\n\n  const teamMembersResponse = await fetch(`https://${enteredRegion}.api.riotgames.com/lol/clash/v1/teams/${teamId}?api_key=${riotAPIKey}`, {\n    accept: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  let teamMembers = (await teamMembersResponse.json())[\"players\"];\n  let playersData = [];\n\n  for (var player of teamMembers) {\n    //probs need to fix this\n    let playerSummonerID = player[\"summonerId\"];\n    const playerSummonerNameResponse = await fetch(`https://${enteredRegion}.api.riotgames.com/lol/summoner/v4/summoners/${playerSummonerID}?api_key=${riotAPIKey}`, {\n      accept: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let accountInfo = await playerSummonerNameResponse.json();\n    let summonerName = accountInfo[\"name\"];\n    let summonerPosition = player[\"position\"];\n    let summonerPuuid = accountInfo[\"puuid\"]; //get summoner rank\n\n    const summonerRankInfoResponse = await fetch(`https://${enteredRegion}.api.riotgames.com/lol/league/v4/entries/by-summoner/${playerSummonerID}?api_key=${riotAPIKey}`, {\n      accept: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let summonerRankInfo = (await summonerRankInfoResponse.json())[1];\n    let summonerRank = `${summonerRankInfo[\"tier\"]} ${summonerRankInfo[\"rank\"]}`;\n    let summonerWR = parseInt(summonerRankInfo[\"wins\"] / (summonerRankInfo[\"wins\"] + summonerRankInfo[\"losses\"]) * 100); //get match id for player\n\n    const summonerMatchesResponse = await fetch(`https://americas.api.riotgames.com/lol/match/v5/matches/by-puuid/${summonerPuuid}/ids?type=ranked&start=0&count=${numbOfGames}&api_key=${riotAPIKey}`, {\n      accept: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let summonerMatches = await summonerMatchesResponse.json(); //get match details for player\n\n    let winRate = {\n      WIN: 0,\n      LOSS: 0\n    };\n    let roleCounterObj = {};\n    let championPoolObj = {};\n\n    for (let match of summonerMatches) {\n      const summonerMatchInfoResponse = await fetch(`https://americas.api.riotgames.com/lol/match/v5/matches/${match}?api_key=${riotAPIKey}`, {\n        accept: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let summonerMatchInfo = (await summonerMatchInfoResponse.json())[\"info\"][\"participants\"];\n\n      for (var participant of summonerMatchInfo) {\n        if (participant[\"summonerName\"].toLowerCase() === summonerName.toLowerCase()) {\n          // MOST PLAYED POSITION\n          if (participant[\"individualPosition\"] in roleCounterObj) {\n            roleCounterObj[participant[\"individualPosition\"]] = ++roleCounterObj[participant[\"individualPosition\"]];\n          } else {\n            roleCounterObj[participant[\"individualPosition\"]] = 1;\n          } // WINRATE\n\n\n          if (participant[\"win\"]) {\n            winRate.WIN = ++winRate[\"WIN\"];\n          } else if (!participant[\"win\"]) {\n            winRate.LOSS = ++winRate[\"LOSS\"];\n          } // MOST PLAYED CHAMPIONS\n\n\n          if (participant[\"championName\"] in championPoolObj) {\n            championPoolObj[participant[\"championName\"]] = ++championPoolObj[participant[\"championName\"]];\n          } else {\n            championPoolObj[participant[\"championName\"]] = 1;\n          }\n        }\n      }\n    }\n\n    const userData = [{\n      name: summonerName,\n      position: summonerPosition,\n      gamesNumb: numbOfGames,\n      rank: summonerRank,\n      winRate: summonerWR,\n      mainRole: findTopValue(roleCounterObj, 2),\n      topChampions: findTopValue(championPoolObj, 5)\n    }];\n    playersData.push(userData);\n  }\n\n  ; // //get opgglink\n  // let opggURL = \"https://oce.op.gg/multi/query=\";\n  // for (player of playersData) {\n  //   let playerFormatted = player['name'].replace(\" \", \"%20\");\n  //   opggURL += playerFormatted + \"%2C\"\n  // }\n  // group information\n\n  const playerDict = {\n    userData: playersData // opggURL: opggURL\n\n  };\n  return playerDict;\n};\n\n_c = RetrieveData;\nexport default RetrieveData;\n\nvar _c;\n\n$RefreshReg$(_c, \"RetrieveData\");","map":{"version":3,"names":["findTopValue","obj","topN","topObj","keys","Object","sort","a","b","slice","reverse","forEach","k","topArr","key","push","RetrieveData","enteredSummonerName","enteredRegion","riotAPIKey","numbOfGames","summonerIdResponse","fetch","accept","summonerId","json","teamIdResponse","teamId","teamMembersResponse","teamMembers","playersData","player","playerSummonerID","playerSummonerNameResponse","accountInfo","summonerName","summonerPosition","summonerPuuid","summonerRankInfoResponse","summonerRankInfo","summonerRank","summonerWR","parseInt","summonerMatchesResponse","summonerMatches","winRate","WIN","LOSS","roleCounterObj","championPoolObj","match","summonerMatchInfoResponse","summonerMatchInfo","participant","toLowerCase","userData","name","position","gamesNumb","rank","mainRole","topChampions","playerDict"],"sources":["C:/Users/Lillyt/Desktop/GIT/Clash-app/src/Components/Search/RetrieveData.js"],"sourcesContent":["const findTopValue = (obj, topN) => {\r\n  let topObj = {};\r\n  var keys = Object.keys(obj);\r\n  keys.sort((a, b) => {\r\n    return obj[a] - obj[b];\r\n  });\r\n\r\n  keys\r\n    .slice(-topN)\r\n    .reverse()\r\n    .forEach((k) => {\r\n      topObj[k] = obj[k];\r\n    });\r\n\r\n  let topArr = [];\r\n\r\n  for (var key in topObj) {\r\n    topArr.push(`${key} (${topObj[key]} games)`);\r\n  }\r\n\r\n  return topArr;\r\n};\r\n\r\nconst RetrieveData = async (enteredSummonerName, enteredRegion) => {\r\n  const riotAPIKey = \"RGAPI-8a62b8a3-4e69-40eb-b56d-786ccda80987\";\r\n  const numbOfGames = 2;\r\n\r\n  //Get summoner ID\r\n  const summonerIdResponse = await fetch(\r\n    `https://${enteredRegion}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${enteredSummonerName}?api_key=${riotAPIKey}`,\r\n    {\r\n      accept: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n\r\n  let summonerId = (await summonerIdResponse.json())[\"id\"];\r\n\r\n  //Get clash team ID\r\n  const teamIdResponse = await fetch(\r\n    `https://${enteredRegion}.api.riotgames.com/lol/clash/v1/players/by-summoner/${summonerId}?api_key=${riotAPIKey}`,\r\n    {\r\n      accept: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n\r\n  let teamId = (await teamIdResponse.json())[0][\"teamId\"];\r\n\r\n  //Get clash team plays summoner ID\r\n  const teamMembersResponse = await fetch(\r\n    `https://${enteredRegion}.api.riotgames.com/lol/clash/v1/teams/${teamId}?api_key=${riotAPIKey}`,\r\n    {\r\n      accept: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n\r\n  let teamMembers = (await teamMembersResponse.json())[\"players\"];\r\n\r\n  let playersData = [];\r\n  for (var player of teamMembers) {\r\n    //probs need to fix this\r\n    let playerSummonerID = player[\"summonerId\"];\r\n\r\n    const playerSummonerNameResponse = await fetch(\r\n      `https://${enteredRegion}.api.riotgames.com/lol/summoner/v4/summoners/${playerSummonerID}?api_key=${riotAPIKey}`,\r\n      {\r\n        accept: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    let accountInfo = await (playerSummonerNameResponse.json());\r\n    let summonerName = accountInfo[\"name\"];\r\n    let summonerPosition = player[\"position\"];\r\n    let summonerPuuid = accountInfo[\"puuid\"];\r\n\r\n    //get summoner rank\r\n    const summonerRankInfoResponse = await fetch(\r\n      `https://${enteredRegion}.api.riotgames.com/lol/league/v4/entries/by-summoner/${playerSummonerID}?api_key=${riotAPIKey}`,\r\n      {\r\n        accept: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    let summonerRankInfo = (await summonerRankInfoResponse.json())[1];\r\n    let summonerRank = `${summonerRankInfo[\"tier\"]} ${summonerRankInfo[\"rank\"]}`;\r\n    let summonerWR = parseInt(\r\n      (summonerRankInfo[\"wins\"] /\r\n        (summonerRankInfo[\"wins\"] + summonerRankInfo[\"losses\"])) *\r\n        100\r\n    );\r\n\r\n    //get match id for player\r\n    const summonerMatchesResponse = await fetch(\r\n      `https://americas.api.riotgames.com/lol/match/v5/matches/by-puuid/${summonerPuuid}/ids?type=ranked&start=0&count=${numbOfGames}&api_key=${riotAPIKey}`,\r\n      {\r\n        accept: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    let summonerMatches = await summonerMatchesResponse.json();\r\n\r\n    //get match details for player\r\n    let winRate = { WIN: 0, LOSS: 0 };\r\n    let roleCounterObj = {};\r\n    let championPoolObj = {};\r\n\r\n    for (let match of summonerMatches) {\r\n      const summonerMatchInfoResponse = await fetch(\r\n        `https://americas.api.riotgames.com/lol/match/v5/matches/${match}?api_key=${riotAPIKey}`,\r\n        {\r\n          accept: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      let summonerMatchInfo = (await summonerMatchInfoResponse.json())[\"info\"][\r\n        \"participants\"\r\n      ];\r\n\r\n      for (var participant of summonerMatchInfo) {\r\n        if (\r\n          participant[\"summonerName\"].toLowerCase() === summonerName.toLowerCase()\r\n        ) {\r\n          // MOST PLAYED POSITION\r\n          if (participant[\"individualPosition\"] in roleCounterObj) {\r\n            roleCounterObj[participant[\"individualPosition\"]] = ++roleCounterObj[\r\n              participant[\"individualPosition\"]\r\n            ];\r\n          } else {\r\n            roleCounterObj[participant[\"individualPosition\"]] = 1;\r\n          }\r\n          // WINRATE\r\n          if (participant[\"win\"]) {\r\n            winRate.WIN = ++winRate[\"WIN\"];\r\n          } else if (!participant[\"win\"]) {\r\n            winRate.LOSS = ++winRate[\"LOSS\"];\r\n          }\r\n\r\n          // MOST PLAYED CHAMPIONS\r\n          if (participant[\"championName\"] in championPoolObj) {\r\n            championPoolObj[participant[\"championName\"]] = ++championPoolObj[\r\n              participant[\"championName\"]\r\n            ];\r\n          } else {\r\n            championPoolObj[participant[\"championName\"]] = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const userData = [\r\n      {\r\n        name: summonerName,\r\n        position: summonerPosition,\r\n        gamesNumb: numbOfGames,\r\n        rank: summonerRank,\r\n        winRate: summonerWR,\r\n        mainRole: findTopValue(roleCounterObj, 2),\r\n        topChampions: findTopValue(championPoolObj, 5),\r\n      },\r\n    ]\r\n    playersData.push(userData);\r\n  };\r\n\r\n    // //get opgglink\r\n    // let opggURL = \"https://oce.op.gg/multi/query=\";\r\n\r\n    // for (player of playersData) {\r\n    //   let playerFormatted = player['name'].replace(\" \", \"%20\");\r\n    //   opggURL += playerFormatted + \"%2C\"\r\n    // }\r\n\r\n    // group information\r\n    const playerDict = {\r\n      userData: playersData,\r\n      // opggURL: opggURL\r\n    };\r\n\r\n  return playerDict;\r\n\r\n};\r\n\r\nexport default RetrieveData;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;EAClC,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,GAAZ,CAAX;EACAG,IAAI,CAACE,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAClB,OAAOP,GAAG,CAACM,CAAD,CAAH,GAASN,GAAG,CAACO,CAAD,CAAnB;EACD,CAFD;EAIAJ,IAAI,CACDK,KADH,CACS,CAACP,IADV,EAEGQ,OAFH,GAGGC,OAHH,CAGYC,CAAD,IAAO;IACdT,MAAM,CAACS,CAAD,CAAN,GAAYX,GAAG,CAACW,CAAD,CAAf;EACD,CALH;EAOA,IAAIC,MAAM,GAAG,EAAb;;EAEA,KAAK,IAAIC,GAAT,IAAgBX,MAAhB,EAAwB;IACtBU,MAAM,CAACE,IAAP,CAAa,GAAED,GAAI,KAAIX,MAAM,CAACW,GAAD,CAAM,SAAnC;EACD;;EAED,OAAOD,MAAP;AACD,CArBD;;AAuBA,MAAMG,YAAY,GAAG,OAAOC,mBAAP,EAA4BC,aAA5B,KAA8C;EACjE,MAAMC,UAAU,GAAG,4CAAnB;EACA,MAAMC,WAAW,GAAG,CAApB,CAFiE,CAIjE;;EACA,MAAMC,kBAAkB,GAAG,MAAMC,KAAK,CACnC,WAAUJ,aAAc,wDAAuDD,mBAAoB,YAAWE,UAAW,EADtF,EAEpC;IACEI,MAAM,EAAE;MACN,gBAAgB;IADV;EADV,CAFoC,CAAtC;EASA,IAAIC,UAAU,GAAG,CAAC,MAAMH,kBAAkB,CAACI,IAAnB,EAAP,EAAkC,IAAlC,CAAjB,CAdiE,CAgBjE;;EACA,MAAMC,cAAc,GAAG,MAAMJ,KAAK,CAC/B,WAAUJ,aAAc,uDAAsDM,UAAW,YAAWL,UAAW,EADhF,EAEhC;IACEI,MAAM,EAAE;MACN,gBAAgB;IADV;EADV,CAFgC,CAAlC;EASA,IAAII,MAAM,GAAG,CAAC,MAAMD,cAAc,CAACD,IAAf,EAAP,EAA8B,CAA9B,EAAiC,QAAjC,CAAb,CA1BiE,CA4BjE;;EACA,MAAMG,mBAAmB,GAAG,MAAMN,KAAK,CACpC,WAAUJ,aAAc,yCAAwCS,MAAO,YAAWR,UAAW,EADzD,EAErC;IACEI,MAAM,EAAE;MACN,gBAAgB;IADV;EADV,CAFqC,CAAvC;EASA,IAAIM,WAAW,GAAG,CAAC,MAAMD,mBAAmB,CAACH,IAApB,EAAP,EAAmC,SAAnC,CAAlB;EAEA,IAAIK,WAAW,GAAG,EAAlB;;EACA,KAAK,IAAIC,MAAT,IAAmBF,WAAnB,EAAgC;IAC9B;IACA,IAAIG,gBAAgB,GAAGD,MAAM,CAAC,YAAD,CAA7B;IAEA,MAAME,0BAA0B,GAAG,MAAMX,KAAK,CAC3C,WAAUJ,aAAc,gDAA+Cc,gBAAiB,YAAWb,UAAW,EADnE,EAE5C;MACEI,MAAM,EAAE;QACN,gBAAgB;MADV;IADV,CAF4C,CAA9C;IASA,IAAIW,WAAW,GAAG,MAAOD,0BAA0B,CAACR,IAA3B,EAAzB;IACA,IAAIU,YAAY,GAAGD,WAAW,CAAC,MAAD,CAA9B;IACA,IAAIE,gBAAgB,GAAGL,MAAM,CAAC,UAAD,CAA7B;IACA,IAAIM,aAAa,GAAGH,WAAW,CAAC,OAAD,CAA/B,CAhB8B,CAkB9B;;IACA,MAAMI,wBAAwB,GAAG,MAAMhB,KAAK,CACzC,WAAUJ,aAAc,wDAAuDc,gBAAiB,YAAWb,UAAW,EAD7E,EAE1C;MACEI,MAAM,EAAE;QACN,gBAAgB;MADV;IADV,CAF0C,CAA5C;IASA,IAAIgB,gBAAgB,GAAG,CAAC,MAAMD,wBAAwB,CAACb,IAAzB,EAAP,EAAwC,CAAxC,CAAvB;IACA,IAAIe,YAAY,GAAI,GAAED,gBAAgB,CAAC,MAAD,CAAS,IAAGA,gBAAgB,CAAC,MAAD,CAAS,EAA3E;IACA,IAAIE,UAAU,GAAGC,QAAQ,CACtBH,gBAAgB,CAAC,MAAD,CAAhB,IACEA,gBAAgB,CAAC,MAAD,CAAhB,GAA2BA,gBAAgB,CAAC,QAAD,CAD7C,CAAD,GAEE,GAHqB,CAAzB,CA9B8B,CAoC9B;;IACA,MAAMI,uBAAuB,GAAG,MAAMrB,KAAK,CACxC,oEAAmEe,aAAc,kCAAiCjB,WAAY,YAAWD,UAAW,EAD5G,EAEzC;MACEI,MAAM,EAAE;QACN,gBAAgB;MADV;IADV,CAFyC,CAA3C;IASA,IAAIqB,eAAe,GAAG,MAAMD,uBAAuB,CAAClB,IAAxB,EAA5B,CA9C8B,CAgD9B;;IACA,IAAIoB,OAAO,GAAG;MAAEC,GAAG,EAAE,CAAP;MAAUC,IAAI,EAAE;IAAhB,CAAd;IACA,IAAIC,cAAc,GAAG,EAArB;IACA,IAAIC,eAAe,GAAG,EAAtB;;IAEA,KAAK,IAAIC,KAAT,IAAkBN,eAAlB,EAAmC;MACjC,MAAMO,yBAAyB,GAAG,MAAM7B,KAAK,CAC1C,2DAA0D4B,KAAM,YAAW/B,UAAW,EAD5C,EAE3C;QACEI,MAAM,EAAE;UACN,gBAAgB;QADV;MADV,CAF2C,CAA7C;MASA,IAAI6B,iBAAiB,GAAG,CAAC,MAAMD,yBAAyB,CAAC1B,IAA1B,EAAP,EAAyC,MAAzC,EACtB,cADsB,CAAxB;;MAIA,KAAK,IAAI4B,WAAT,IAAwBD,iBAAxB,EAA2C;QACzC,IACEC,WAAW,CAAC,cAAD,CAAX,CAA4BC,WAA5B,OAA8CnB,YAAY,CAACmB,WAAb,EADhD,EAEE;UACA;UACA,IAAID,WAAW,CAAC,oBAAD,CAAX,IAAqCL,cAAzC,EAAyD;YACvDA,cAAc,CAACK,WAAW,CAAC,oBAAD,CAAZ,CAAd,GAAoD,EAAEL,cAAc,CAClEK,WAAW,CAAC,oBAAD,CADuD,CAApE;UAGD,CAJD,MAIO;YACLL,cAAc,CAACK,WAAW,CAAC,oBAAD,CAAZ,CAAd,GAAoD,CAApD;UACD,CARD,CASA;;;UACA,IAAIA,WAAW,CAAC,KAAD,CAAf,EAAwB;YACtBR,OAAO,CAACC,GAAR,GAAc,EAAED,OAAO,CAAC,KAAD,CAAvB;UACD,CAFD,MAEO,IAAI,CAACQ,WAAW,CAAC,KAAD,CAAhB,EAAyB;YAC9BR,OAAO,CAACE,IAAR,GAAe,EAAEF,OAAO,CAAC,MAAD,CAAxB;UACD,CAdD,CAgBA;;;UACA,IAAIQ,WAAW,CAAC,cAAD,CAAX,IAA+BJ,eAAnC,EAAoD;YAClDA,eAAe,CAACI,WAAW,CAAC,cAAD,CAAZ,CAAf,GAA+C,EAAEJ,eAAe,CAC9DI,WAAW,CAAC,cAAD,CADmD,CAAhE;UAGD,CAJD,MAIO;YACLJ,eAAe,CAACI,WAAW,CAAC,cAAD,CAAZ,CAAf,GAA+C,CAA/C;UACD;QACF;MACF;IACF;;IAED,MAAME,QAAQ,GAAG,CACf;MACEC,IAAI,EAAErB,YADR;MAEEsB,QAAQ,EAAErB,gBAFZ;MAGEsB,SAAS,EAAEtC,WAHb;MAIEuC,IAAI,EAAEnB,YAJR;MAKEK,OAAO,EAAEJ,UALX;MAMEmB,QAAQ,EAAE5D,YAAY,CAACgD,cAAD,EAAiB,CAAjB,CANxB;MAOEa,YAAY,EAAE7D,YAAY,CAACiD,eAAD,EAAkB,CAAlB;IAP5B,CADe,CAAjB;IAWAnB,WAAW,CAACf,IAAZ,CAAiBwC,QAAjB;EACD;;EAAA,CAvJgE,CAyJ/D;EACA;EAEA;EACA;EACA;EACA;EAEA;;EACA,MAAMO,UAAU,GAAG;IACjBP,QAAQ,EAAEzB,WADO,CAEjB;;EAFiB,CAAnB;EAKF,OAAOgC,UAAP;AAED,CAzKD;;KAAM9C,Y;AA2KN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}