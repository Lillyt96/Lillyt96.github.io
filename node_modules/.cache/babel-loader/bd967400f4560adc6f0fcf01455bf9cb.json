{"ast":null,"code":"const RetrieveData = async (summonerName, enteredRegion) => {\n  const riotAPIKey = \"RGAPI-d57c4750-36c1-4399-a0ed-ba00cb87d481\";\n\n  try {\n    //Get summoner ID\n    const summonerIdResponse = await fetch(`https://${enteredRegion}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${summonerName}?api_key=${riotAPIKey}`, {\n      accept: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let summonerId = (await summonerIdResponse.json())[\"id\"];\n  } catch (error) {\n    return error;\n  } //   //Get clash team ID\n  // const teamIdResponse = await fetch(\n  //     `https://${enteredRegion}.api.riotgames.com/lol/clash/v1/players/by-summoner/${summonerId}?api_key=${riotAPIKey}`,\n  //     {\n  //       accept: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     }\n  //   )\n  //   let teamId = (await teamIdResponse.json())[0][\"teamId\"];\n  //   //Get clash team plays summoner ID\n  //   const teamMembersResponse = await fetch(\n  //     `https://${enteredRegion}.api.riotgames.com/lol/clash/v1/teams/${teamId}?api_key=${riotAPIKey}`,\n  //     {\n  //       accept: {\n  //         \"Content-Type\": \"application/json\",\n  //       },\n  //     }\n  //   )\n  //   let teamMembers = (await teamMembersResponse.json())[\"players\"];\n  //   let players = [];\n  //   for (var player of teamMembers) { //probs need to fix this\n  //     let playerSummonerID = player[\"summonerId\"];\n  //       const playerSummonerNameResponse = await fetch(\n  //         `https://${enteredRegion}.api.riotgames.com/lol/summoner/v4/summoners/${playerSummonerID}?api_key=${riotAPIKey}`,\n  //         {\n  //           accept: {\n  //             \"Content-Type\": \"application/json\",\n  //           },\n  //         } \n  //       );\n  //       let playerSummonerName = await playerSummonerNameResponse.json();\n  //       let playerData = {\"name\":playerSummonerName['name'], \"position\":player[\"position\"]};\n  //       players.push(playerData);\n  //   }\n  //   //get opgglink\n  //   let opggURL = \"https://oce.op.gg/multi/query=\";\n  //   for (player of players) {\n  //     let playerFormatted = player['name'].replace(\" \", \"%20\");\n  //     opggURL += playerFormatted + \"%2C\"\n  //   }\n  //   //group information\n  //   const playerDict = {\n  //     userData: players,\n  //     opggURL: opggURL\n  //   };\n  //   return playerDict;\n  // } catch (error) {\n  //   return error\n  // }\n\n};\n\n_c = RetrieveData;\nexport default RetrieveData;\n\nvar _c;\n\n$RefreshReg$(_c, \"RetrieveData\");","map":{"version":3,"names":["RetrieveData","summonerName","enteredRegion","riotAPIKey","summonerIdResponse","fetch","accept","summonerId","json","error"],"sources":["C:/Users/Lillyt/Desktop/GIT/Clash-app/src/Components/Search/RetrieveData.js"],"sourcesContent":["const  RetrieveData = async (summonerName, enteredRegion) => {\r\n    const riotAPIKey = \"RGAPI-d57c4750-36c1-4399-a0ed-ba00cb87d481\";\r\n\r\n  try {\r\n    //Get summoner ID\r\n    const summonerIdResponse = await fetch(\r\n      `https://${enteredRegion}.api.riotgames.com/lol/summoner/v4/summoners/by-name/${summonerName}?api_key=${riotAPIKey}`,\r\n      {\r\n        accept: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n    \r\n       \r\n    let summonerId = (await summonerIdResponse.json())[\"id\"];\r\n\r\n  } catch (error) {\r\n    return error\r\n  } \r\n    //   //Get clash team ID\r\n    // const teamIdResponse = await fetch(\r\n    //     `https://${enteredRegion}.api.riotgames.com/lol/clash/v1/players/by-summoner/${summonerId}?api_key=${riotAPIKey}`,\r\n    //     {\r\n    //       accept: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //       },\r\n    //     }\r\n    //   )\r\n    //   let teamId = (await teamIdResponse.json())[0][\"teamId\"];\r\n\r\n\r\n    //   //Get clash team plays summoner ID\r\n    //   const teamMembersResponse = await fetch(\r\n    //     `https://${enteredRegion}.api.riotgames.com/lol/clash/v1/teams/${teamId}?api_key=${riotAPIKey}`,\r\n    //     {\r\n    //       accept: {\r\n    //         \"Content-Type\": \"application/json\",\r\n    //       },\r\n    //     }\r\n    //   )\r\n\r\n    //   let teamMembers = (await teamMembersResponse.json())[\"players\"];\r\n\r\n    //   let players = [];\r\n    //   for (var player of teamMembers) { //probs need to fix this\r\n    //     let playerSummonerID = player[\"summonerId\"];\r\n      \r\n    //       const playerSummonerNameResponse = await fetch(\r\n    //         `https://${enteredRegion}.api.riotgames.com/lol/summoner/v4/summoners/${playerSummonerID}?api_key=${riotAPIKey}`,\r\n    //         {\r\n    //           accept: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //           },\r\n    //         } \r\n    //       );\r\n\r\n    //       let playerSummonerName = await playerSummonerNameResponse.json();\r\n    //       let playerData = {\"name\":playerSummonerName['name'], \"position\":player[\"position\"]};\r\n    //       players.push(playerData);\r\n    //   }\r\n\r\n    //   //get opgglink\r\n    //   let opggURL = \"https://oce.op.gg/multi/query=\";\r\n    //   for (player of players) {\r\n    //     let playerFormatted = player['name'].replace(\" \", \"%20\");\r\n    //     opggURL += playerFormatted + \"%2C\"\r\n    //   }\r\n\r\n    //   //group information\r\n    //   const playerDict = {\r\n    //     userData: players,\r\n    //     opggURL: opggURL\r\n    //   };\r\n      \r\n    //   return playerDict;\r\n    // } catch (error) {\r\n    //   return error\r\n    // }\r\n\r\n\r\n  };\r\n\r\n\r\nexport default RetrieveData;\r\n"],"mappings":"AAAA,MAAOA,YAAY,GAAG,OAAOC,YAAP,EAAqBC,aAArB,KAAuC;EACzD,MAAMC,UAAU,GAAG,4CAAnB;;EAEF,IAAI;IACF;IACA,MAAMC,kBAAkB,GAAG,MAAMC,KAAK,CACnC,WAAUH,aAAc,wDAAuDD,YAAa,YAAWE,UAAW,EAD/E,EAEpC;MACEG,MAAM,EAAE;QACN,gBAAgB;MADV;IADV,CAFoC,CAAtC;IASA,IAAIC,UAAU,GAAG,CAAC,MAAMH,kBAAkB,CAACI,IAAnB,EAAP,EAAkC,IAAlC,CAAjB;EAED,CAbD,CAaE,OAAOC,KAAP,EAAc;IACd,OAAOA,KAAP;EACD,CAlB0D,CAmBzD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;AAGD,CAhFH;;KAAOT,Y;AAmFP,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}